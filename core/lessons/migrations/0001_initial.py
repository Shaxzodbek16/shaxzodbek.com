# Generated by Django 5.1.6 on 2025-04-08 18:33

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="StepsOfLesson",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=100)),
                ("description", models.TextField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_up", models.DateTimeField(auto_now=True)),
                ("slug", models.SlugField(blank=True, max_length=100, unique=True)),
                ("code", models.TextField()),
                (
                    "image",
                    models.ImageField(
                        blank=True, null=True, upload_to="lessons/steps/%Y/%m/%d"
                    ),
                ),
            ],
            options={
                "verbose_name": "Step of Lesson",
                "verbose_name_plural": "Steps of Lessons",
                "db_table": "steps_of_lessons",
            },
        ),
        migrations.CreateModel(
            name="Topic",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=100)),
                ("description", models.TextField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_up", models.DateTimeField(auto_now=True)),
                ("slug", models.SlugField(blank=True, max_length=100, unique=True)),
                (
                    "image",
                    models.ImageField(
                        blank=True, null=True, upload_to="lessons/topics/%Y/%m/%d"
                    ),
                ),
            ],
            options={
                "verbose_name": "Topic",
                "verbose_name_plural": "Topics",
                "db_table": "topics",
            },
        ),
        migrations.CreateModel(
            name="Lesson",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=100)),
                ("description", models.TextField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_up", models.DateTimeField(auto_now=True)),
                ("slug", models.SlugField(blank=True, max_length=100, unique=True)),
                ("thumbnail", models.URLField(blank=True, null=True)),
                ("youtube_url", models.URLField(blank=True, null=True)),
                ("likes", models.PositiveBigIntegerField(default=0)),
                ("dislikes", models.PositiveBigIntegerField(default=0)),
                ("is_published", models.BooleanField(default=False)),
                (
                    "steps",
                    models.ManyToManyField(
                        related_name="lessons", to="lessons.stepsoflesson"
                    ),
                ),
                (
                    "topic",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="lessons",
                        to="lessons.topic",
                    ),
                ),
            ],
            options={
                "verbose_name": "Lesson",
                "verbose_name_plural": "Lessons",
                "db_table": "lessons",
            },
        ),
    ]
